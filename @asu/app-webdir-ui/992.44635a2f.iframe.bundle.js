"use strict";(self.webpackChunk_asu_app_webdir_ui=self.webpackChunk_asu_app_webdir_ui||[]).push([[992],{"./src/WebDirectoryComponent/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Q:()=>WebDirectory});var esm_extends=__webpack_require__("../../node_modules/@babel/runtime/helpers/esm/extends.js"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),react=__webpack_require__("../../node_modules/react/index.js");const componentDatalayer=function trackReactComponent({packageName="",component="",type="",configuration={}}){packageName&&component?(window.uds=window.uds||{},window.uds.package=window.uds.package||{},window.uds.package[packageName]={component,type,configuration}):console.error("trackReactComponent: Missing required arguments.")};var libCore_es=__webpack_require__("../components-core/dist/libCore.es.js"),search=__webpack_require__("./src/helpers/search.js"),SearchResultsList=__webpack_require__("./src/SearchResultsList/index.js");const filtersData={1:"Faculty",2:"Academic Professionals",3:"Fixed-Term Faculty and Academic Professionals"},FacultyRankTabPanels=({filters,API_URL,searchApiVersion,appPathFolder,deptIds,display,profileURLBase,searchType})=>{const[requestFilters,setRequestFilters]=(0,react.useState)({}),[tabChange,setTabChange]=(0,react.useState)(null),[loading,setLoading]=(0,react.useState)(!0),[tabs,setTabs]=(0,react.useState)({}),searchUrl=new URL(`${API_URL}${searchApiVersion}${search.sP[search.Ry.WEB_DIRECTORY_FACULTY_RANK].url}`);searchUrl.searchParams.append("sort_by",searchType),searchUrl.searchParams.append("dept_ids",deptIds),searchUrl.searchParams.append("page","1"),searchUrl.searchParams.append("size","1");const fetchRankGroupData=async rankGroup=>{const url=`${searchUrl}&rank_group=${rankGroup}`,response=await fetch(url),data=await response.json();return{rankGroup,length:data.results?.length}};(0,react.useEffect)((()=>{const tempFilters={...filters};tempFilters.deptIds=deptIds.split(","),setRequestFilters(tempFilters);const promises=Object.keys(filtersData).map(fetchRankGroupData);Promise.all(promises).then((results=>{const newTabs=results.reduce(((acc,{rankGroup,length})=>(length>0&&(acc[rankGroup]=filtersData[rankGroup]),acc)),{});setTabs(newTabs),setLoading(!1)}))}),[deptIds,tabChange]);const engineParams={filters,API_URL,searchApiVersion,profileURLBase:profileURLBase||"https://search.asu.edu",appPathFolder},enginesWithParams={[search.Ry.WEB_DIRECTORY_FACULTY_RANK]:{...search.sP[search.Ry.WEB_DIRECTORY_FACULTY_RANK],...engineParams}},searchTypeEngineMap={faculty_rank:search.Ry.WEB_DIRECTORY_FACULTY_RANK};return loading?react.createElement("div",null,"Loading..."):Object.keys(tabs).length?react.createElement(libCore_es.YT,{onTabChange:setTabChange},Object.keys(tabs).map((rankGroup=>react.createElement(libCore_es.oz,{key:rankGroup,id:`faculty-${rankGroup}`,title:filtersData[rankGroup]},react.createElement(SearchResultsList.A,{engine:enginesWithParams[searchTypeEngineMap[searchType]],itemsPerPage:parseInt(display.profilesPerPage,10)||6,size:"large",sort:"faculty_rank",hidePaginator:"1"!==display.usePager,filters:requestFilters,profilesToFilterOut:display.doNotDisplayProfiles,display,rankGroup:rankGroup.toString(),restClientTag:"asuis"}))))):react.createElement("div",null,"No faculty rank data found for department ",deptIds)};FacultyRankTabPanels.displayName="FacultyRankTabPanels",FacultyRankTabPanels.propTypes={deptIds:prop_types_default().string,API_URL:prop_types_default().string,searchApiVersion:prop_types_default().string,searchType:prop_types_default().string,profileURLBase:prop_types_default().string,appPathFolder:prop_types_default().string,display:prop_types_default().shape({defaultSort:prop_types_default().string,doNotDisplayProfiles:prop_types_default().string,profilesPerPage:prop_types_default().string,usePager:prop_types_default().string}),filters:prop_types_default().shape({employee:prop_types_default().string,expertise:prop_types_default().string,title:prop_types_default().string,campuses:prop_types_default().string})};const FacultyRankComponent=FacultyRankTabPanels;FacultyRankTabPanels.__docgenInfo={description:"Prop types for FacultyRankTabPanels component.\n@type {Object}\n@property {string} deptIds - The department IDs.\n@property {string} API_URL - The API URL.\n@property {string} searchApiVersion - The search API version.\n@property {string} searchType - The type of search.\n@property {string} appPathFolder - The application path folder.\n@property {Object} display - Display settings.\n@property {string} display.defaultSort - The default sorting option.\n@property {string} display.doNotDisplayProfiles - Profiles not to display.\n@property {string} display.profilesPerPage - Number of profiles to display.\n@property {string} display.usePager - Whether to use pagination.\n@property {Object} filters - Filters for the search.\n@property {string} filters.employee - Employee filter.\n@property {string} filters.expertise - Expertise filter.\n@property {string} filters.title - Title filter.\n@property {string} filters.campuses - Campuses filter.",methods:[],displayName:"FacultyRankTabPanels",props:{deptIds:{description:"",type:{name:"string"},required:!1},API_URL:{description:"",type:{name:"string"},required:!1},searchApiVersion:{description:"",type:{name:"string"},required:!1},searchType:{description:"",type:{name:"string"},required:!1},profileURLBase:{description:"",type:{name:"string"},required:!1},appPathFolder:{description:"",type:{name:"string"},required:!1},display:{description:"",type:{name:"shape",value:{defaultSort:{name:"string",required:!1},doNotDisplayProfiles:{name:"string",required:!1},profilesPerPage:{name:"string",required:!1},usePager:{name:"string",required:!1}}},required:!1},filters:{description:"",type:{name:"shape",value:{employee:{name:"string",required:!1},expertise:{name:"string",required:!1},title:{name:"string",required:!1},campuses:{name:"string",required:!1}}},required:!1}}};var styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const NavControlButtons=styled_components_browser_esm.Ay.div`
  button {
    padding: 16px 0;
    border: none;
    outline: none;
  }
`,NavControls=({hidePrev,hideNext,clickPrev,clickNext})=>react.createElement(NavControlButtons,null,!hidePrev&&react.createElement("button",{className:"scroll-control-prev",type:"button",onClick:clickPrev,tabIndex:-1},react.createElement("span",{className:"carousel-control-prev-icon","aria-hidden":"true"}),react.createElement("span",{className:"visually-hidden"},"Previous")),!hideNext&&react.createElement("button",{className:"scroll-control-next",type:"button",onClick:clickNext,tabIndex:-1},react.createElement("span",{className:"carousel-control-next-icon","aria-hidden":"true"}),react.createElement("span",{className:"visually-hidden"},"Next")));NavControls.displayName="NavControls",NavControls.propTypes={hidePrev:prop_types_default().bool,hideNext:prop_types_default().bool,clickPrev:prop_types_default().func.isRequired,clickNext:prop_types_default().func.isRequired},NavControls.__docgenInfo={description:"",methods:[],displayName:"NavControls",props:{hidePrev:{description:"",type:{name:"bool"},required:!1},hideNext:{description:"",type:{name:"bool"},required:!1},clickPrev:{description:"",type:{name:"func"},required:!0},clickNext:{description:"",type:{name:"func"},required:!0}}};const FilterContainer=styled_components_browser_esm.Ay.fieldset`
  width: 100%;
  margin: 0 0 2rem 0;

  .choices-wrapper {
    position: relative;
  }

  legend {
    font-size: 1rem;
    font-weight: bold;
  }
  .choices-container {
    display: flex;
    overflow-x: auto;
    padding: 8px 0;
    &:focus {
      outline: none !important;
      box-shadow: 0px 0px 0px 2px #ffffff, 0px 0px 0px 4px #191919 !important;
    }

    &::-webkit-scrollbar {
      display: none;
    }
    .choice {
      &:hover {
        text-decoration: none;
      }
      font-weight: bold;
      text-decoration: underline;
      border: none;
      background-color: transparent;
      color: #8c1d40;
      &:is(:first-child) {
        padding-left: 0px;
      }
      white-space: nowrap;
      margin: 0 8px;
      padding: 6px 12px;
      &.selected {
        color: white;
        z-index: 3;
        background-color: #8c1d40;
        border-radius: 300px;
      }
    }
  }
`,FilterComponent=({filterLabel,choices=[],onChoose=()=>{},resetFilters=()=>{}})=>{const[selected,setSelected]=(0,react.useState)(null),[focusedIndex,setFocusedIndex]=(0,react.useState)(-1),[totalChoices,setTotalChoices]=(0,react.useState)(0),containerRef=(0,react.useRef)(null),[scrollLeft,setScrollLeft]=(0,react.useState)(0),[scrollableWidth,setScrollableWidth]=(0,react.useState)(0);(0,react.useEffect)((()=>{const onScroll=()=>{setScrollLeft(containerRef.current.scrollLeft)};return containerRef.current&&(containerRef.current.addEventListener("scroll",onScroll),onScroll()),()=>containerRef.current?.removeEventListener("scroll",onScroll)}),[scrollableWidth]),(0,react.useEffect)((()=>{const onResize=()=>{containerRef.current&&setScrollableWidth(containerRef.current.scrollWidth-containerRef.current.offsetWidth)};return containerRef.current&&(containerRef.current.addEventListener("resize",onResize),onResize()),()=>containerRef.current?.removeEventListener("resize",onResize)}),[]),(0,react.useEffect)((()=>{if(containerRef.current){const totalChildren=containerRef.current.children.length;setTotalChoices(totalChildren)}}),[]);const handleChoose=choice=>{setSelected(choice),onChoose(choice)},slideNav=direction=>{const container=containerRef.current,maxScrollLeft=container.scrollWidth-container.clientWidth;let newScrollLeft=container.scrollLeft+200*direction;newScrollLeft=Math.max(0,Math.min(maxScrollLeft,newScrollLeft)),container.scrollTo({left:newScrollLeft,behavior:"smooth"})};return react.createElement(FilterContainer,{className:"filter-container"},react.createElement("legend",null,filterLabel),react.createElement("div",{className:"choices-wrapper"},react.createElement(NavControls,{hidePrev:scrollLeft<=0,hideNext:scrollLeft>=scrollableWidth-5,clickPrev:()=>{slideNav(-1)},clickNext:()=>{slideNav(1)}}),react.createElement("div",{role:"radiogroup",tabIndex:0,onKeyDown:event=>{if(containerRef.current)if("ArrowRight"===event.key&&focusedIndex+1<totalChoices){const focusedItem=containerRef.current?.children[focusedIndex+1];setFocusedIndex(focusedIndex+1),focusedItem.focus()}else if("ArrowLeft"===event.key&&focusedIndex-1>=0){const focusedItem=containerRef.current.children[focusedIndex-1];setFocusedIndex(focusedIndex-1),focusedItem.focus()}},className:"choices-container",ref:containerRef,"aria-label":`${filterLabel} filter options}`},resetFilters&&react.createElement("button",{role:"radio",type:"button",onClick:e=>{e.preventDefault(),handleChoose(null),resetFilters()},tabIndex:-1,"aria-label":`Reset ${filterLabel}`,"aria-checked":null===selected,className:"choice"},"All"),choices.map((choice=>react.createElement("button",{role:"radio",type:"button",key:choice,onClick:e=>{e.preventDefault(),handleChoose(choice)},"aria-checked":selected===choice,className:(selected===choice?"selected":"")+" choice","aria-label":`Filter by ${choice}`,tabIndex:-1},choice))))))};FilterComponent.displayName="FilterComponent",FilterComponent.propTypes={filterLabel:prop_types_default().string.isRequired,choices:prop_types_default().arrayOf(prop_types_default().string).isRequired,onChoose:prop_types_default().func.isRequired,resetFilters:prop_types_default().func},FilterComponent.__docgenInfo={description:"Prop types for FilterComponent component.\n@type {Object}\n@property {string} filterLabel - The label for the filter.\n@property {string[]} [choices=[]] - An array of choices for the filter.\n@property {function} [onChoose=() => {}] - A callback function triggered when a choice is selected.\n@property {function} [resetFilters=() => {}] - A callback function triggered to reset the filters.",methods:[],displayName:"FilterComponent",props:{choices:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},onChoose:{defaultValue:{value:"() => {}",computed:!1},description:"",type:{name:"func"},required:!1},resetFilters:{defaultValue:{value:"() => {}",computed:!1},description:"",type:{name:"func"},required:!1},filterLabel:{description:"",type:{name:"string"},required:!0}}};var components_sort=__webpack_require__("./src/SearchPage/components/sort.js");const WebDirLayout=styled_components_browser_esm.Ay.div`
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas:
    "filter sort"
    "results results";
  grid-column-gap: 100px;

  @media (max-width: 768px) {
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      "sort sort"
      "filter filter"
      "results results";
  }

  .sort {
    grid-area: sort;
  }
  .filter-container {
    grid-area: filter;
  }
  .plain-button {
    background-color: #fff;
    border: none;
    outline: none;
    color: #822141;
  }
  .plain-button:hover {
    cursor: pointer;
  }
  .results {
    grid-area: results;
  }
`,FacultyRankLayout=styled_components_browser_esm.Ay.div``;function WebDirectory({searchType,ids,deptIds,API_URL,searchApiVersion,profileURLBase,appPathFolder,display,filters,alphaFilter="false"}){const[sort,setSort]=(0,react.useState)((function defaultSortSetter(){const defaultCMSOptions={last_name:"last_name_asc",webdir_customized:"employee_weight",people_order:"people_order"};if(Object.prototype.hasOwnProperty.call(defaultCMSOptions,display?.defaultSort))return defaultCMSOptions[display?.defaultSort];return"last_name_asc"})),[requestFilters,setRequestFilters]=(0,react.useState)((function doSearch(){const tempFilters=filters?{...filters}:{};if("departments"===searchType||"faculty_rank"===searchType)return tempFilters.deptIds=deptIds.split(","),tempFilters;return tempFilters.peopleInDepts=ids.split(",").filter((id=>id.includes(":"))).map((pair=>pair.split(":"))).map((pair=>({asurite_id:pair[0],dept_id:pair[1]}))),tempFilters}));(0,react.useEffect)((()=>{"undefined"!=typeof window&&componentDatalayer({packageName:"app-webdir-ui",component:"WebDirectory",type:searchType,configuration:{...filters,...display}})}),[]);const customSortOptions=function sortOptionsFunc(webDirSearchType,departmentIds){return"departments"===webDirSearchType&&departmentIds?.split(",")?.length<2?[{value:"default",label:"Choose Sort",disabled:!0},{value:"last_name_asc",label:"Last Name (ascending)"},{value:"last_name_desc",label:"Last Name (descending)"},{value:"employee_weight",label:"Department Defined"}]:[{value:"default",label:"Choose Sort",disabled:!0},{value:"last_name_asc",label:"Last Name (ascending)"},{value:"last_name_desc",label:"Last Name (descending)"}]}(searchType,deptIds),engineParams={filters,API_URL,searchApiVersion,profileURLBase:profileURLBase||"https://search.asu.edu",appPathFolder},enginesWithParams={[search.Ry.WEB_DIRECTORY_DEPARTMENTS]:{...search.sP[search.Ry.WEB_DIRECTORY_DEPARTMENTS],...engineParams},[search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS]:{...search.sP[search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS],...engineParams},[search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS]:{...search.sP[search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS],...engineParams},[search.Ry.WEB_DIRECTORY_FACULTY_RANK]:{...search.sP[search.Ry.WEB_DIRECTORY_FACULTY__RANK],...engineParams,deptIds,display,searchType}},searchTypeEngineMap={departments:search.Ry.WEB_DIRECTORY_DEPARTMENTS,people:search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS,people_departments:search.Ry.WEB_DIRECTORY_PEOPLE_AND_DEPS,faculty_rank:search.Ry.WEB_DIRECTORY_FACULTY_RANK};return"faculty_rank"!==searchType?react.createElement(react.Fragment,null,react.createElement(WebDirLayout,null,"true"===alphaFilter&&react.createElement(FilterComponent,{filterLabel:"Filter By Last Initial",choices:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],onChoose:filterLetter=>setRequestFilters({...requestFilters,lastInit:filterLetter}),resetFilters:()=>setRequestFilters({...requestFilters,lastInit:""})}),react.createElement("div",{className:"sort"},react.createElement(components_sort.r,{customSortOptions,sort,onChange:val=>{setSort(val)}})),react.createElement("div",{className:"results"},react.createElement(SearchResultsList.A,{engine:enginesWithParams[searchTypeEngineMap[searchType]],itemsPerPage:parseInt(display?.profilesPerPage,10)||6,sort,hidePaginator:"1"!==display?.usePager,filters:requestFilters,profilesToFilterOut:display?.doNotDisplayProfiles,display,appPathFolder,restClientTag:"webdir"})))):react.createElement(FacultyRankLayout,null,react.createElement(FacultyRankComponent,(0,esm_extends.A)({},enginesWithParams[searchTypeEngineMap[searchType]],{alphaFilter})))}WebDirectory.displayName="WebDirectory",WebDirectory.propTypes={deptIds:prop_types_default().string,API_URL:prop_types_default().string,searchApiVersion:prop_types_default().string,searchType:prop_types_default().string,ids:prop_types_default().string,profileURLBase:prop_types_default().string,appPathFolder:prop_types_default().string,display:prop_types_default().shape({defaultSort:prop_types_default().string,doNotDisplayProfiles:prop_types_default().string,profilesPerPage:prop_types_default().string,usePager:prop_types_default().string}),filters:prop_types_default().shape({employee:prop_types_default().string,expertise:prop_types_default().string,title:prop_types_default().string,campuses:prop_types_default().string}),alphaFilter:prop_types_default().string},WebDirectory.__docgenInfo={description:"React component for displaying web directory search results.\n\n@param {Object} props - The props for configuring the WebDirectory component.\n@param {string} props.searchType - The type of web directory search (e.g., 'departments', 'people').\n@param {string} props.ids - The IDs used for searching (e.g., department IDs, ASURITE IDs).\n@param {string} props.deptIds - The department IDs for searching.\n@param {string} props.API_URL - The API URL for performing the search.\n@param {string} props.searchApiVersion - The version of the search API to use.\n@param {string} props.profileURLBase - The base URL for profile links.\n@param {string} props.appPathFolder - The base path for the application folder.\n@param {object} props.display - Display options for the search results.\n@param {Object} props.filters - Filters for the search.\n@param {string} props.alphaFilter - Indicates whether to enable alpha filtering.\n@returns {JSX.Element} The WebDirectory component.",methods:[],displayName:"WebDirectory",props:{alphaFilter:{defaultValue:{value:'"false"',computed:!1},description:"",type:{name:"string"},required:!1},deptIds:{description:"",type:{name:"string"},required:!1},API_URL:{description:"",type:{name:"string"},required:!1},searchApiVersion:{description:"",type:{name:"string"},required:!1},searchType:{description:"",type:{name:"string"},required:!1},ids:{description:"",type:{name:"string"},required:!1},profileURLBase:{description:"",type:{name:"string"},required:!1},appPathFolder:{description:"",type:{name:"string"},required:!1},display:{description:"",type:{name:"shape",value:{defaultSort:{name:"string",required:!1},doNotDisplayProfiles:{name:"string",required:!1},profilesPerPage:{name:"string",required:!1},usePager:{name:"string",required:!1}}},required:!1},filters:{description:"",type:{name:"shape",value:{employee:{name:"string",required:!1},expertise:{name:"string",required:!1},title:{name:"string",required:!1},campuses:{name:"string",required:!1}}},required:!1}}}}}]);
//# sourceMappingURL=992.44635a2f.iframe.bundle.js.map