name: development-workflow
on:
  push:
    branches: ["testing-user-ci"]

jobs:
  run-yarn-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      GH_TOKEN: ${{ secrets.ASU_DEV_STACK_GHP }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup node to install packages from npm
        uses: actions/setup-node@v2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: "14.x"
          registry-url: "https://registry.web.asu.edu/"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install and build
        run: |
          echo '@asu-design-system:registry=registry.web.asu.edu/:_authToken=${{secrets.NPM_TOKEN}} > ~/.npmrc'
          yarn install --freeze-lockfile
          yarn build

      - name: Run tests
        run: |
          echo 'Tests temporarily disabled'
          echo 'Could run yarn lint here'
          echo 'Or yarn test:e2e or yarn percy, once tests are ready'

      - name: Prebuild storybook build
        run: |
          yarn deploy-storybook --dry-run

      - name: Copy and compile nunjucks templates
        run: |
          yarn gulp

      - name: Setup node for publishing to Github packages
        uses: actions/setup-node@v2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: "14.x"
          registry-url: "https://npm.pkg.github.com/"

      - name: Yarn publish packages
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }} > ~/.npmrc
          npm whoami --registry=https://npm.pkg.github.com/
          yarn publish-packages

      - name: Publish to Github Pages
        run: |
          echo 'skipping for now'
